<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.idmap.mapper.RoleMapper">
	<resultMap id="neuUserRole" type="com.neusoft.idmap.bean.NeuUserRoleBean">
		<result column="neuUserId" property="userId" javaType="java.lang.Integer"
			jdbcType="INTEGER" />
		<result column="deadline" property="deadline" javaType="java.util.Date"
			jdbcType="DATE" />
		<result column="roleId" property="role" javaType="java.lang.Integer"
			jdbcType="INTEGER" />
		<result column="neuCmptId" property="cmptId" javaType="java.lang.Integer"
			jdbcType="INTEGER" />
		<result column="id" property="id" javaType="java.lang.Integer"
			jdbcType="INTEGER" />
		<result column="locName" property="locName" javaType="java.lang.String"
			jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		neuUserId,deadline,roleId,neuCmptId,id
	</sql>

	<!-- 根据赛事的id获取委托用户的id -->
	<select id="getNeuUserIdsByNeuCmptId" resultType="java.lang.Integer">
		select neuUserId from common.neuUserRole
		where neuUserRole.neuCmptId=#{neuCmptId} and deleted=0
	</select>

	<!-- 根据用户的id获取赛事的id -->
	<select id="getNeuCmptIdsByNeuUserId" resultType="java.lang.Integer">
		select distinct(neuCmptId) from common.neuUserRole
		where neuUserRole.neuUserId=#{neuUserId}
		<if test="neuCmptId != 0">
			and neuUserRole.neuCmptId=#{neuCmptId}
		</if>
		<if test="roleId != 0">
			and neuUserRole.roleId=#{roleId}
		</if>
		and deleted=0
	</select>
	
	<!-- 根据用户的id获取赛事的id -->
	<select id="getNeuCmptIds" resultType="java.lang.Integer">
		select distinct(neuCmptId) from common.neuUserRole
		where neuUserRole.committeeNeuUserId=#{neuUserId} and neuUserRole.neuUserId=#{userId}
		<if test="neuCmptId != 0">
			and neuUserRole.neuCmptId=#{neuCmptId}
		</if>
		<if test="roleId != 0">
			and neuUserRole.roleId=#{roleId}
		</if>
		and deleted=0
	</select>
	<!-- 根据用户的id获取赛事 -->
	<select id="getNeuCmptsByNeuUserId" resultMap="neuUserRole">
		select neuUserId,deadline,roleId,neuCmptId,id
		from common.neuUserRole
		where neuUserRole.neuUserId=#{neuUserId}
	</select>
	<!-- 根据用户的id以及的赛事Id获取roles -->
	<select id="getRoleIds" resultType="java.lang.Integer">
		select roleId from common.neuUserRole
		where neuUserRole.neuUserId=#{neuUserId}
		and neuUserRole.neuCmptId=#{neuCmptId}
		and deleted=0
	</select>
	<!-- 根据用户的id以及的赛事Id获取roles -->
	<select id="getIds" resultType="java.lang.Integer">
		select id from common.neuUserRole
		where neuUserRole.neuUserId=#{neuUserId}
		and neuUserRole.neuCmptId=#{neuCmptId}
		and deleted=0
	</select>
	<!-- 根据记录id获取roleBean -->
	<select id="getNeuUserRoleById" resultMap="neuUserRole">
		select
		<include refid="Base_Column_List" />
		from common.neuUserRole
		where deleted=0 and id=#{id}
		limit 0,1
	</select>

	<!-- 插入修改用户的id角色信息 -->
	<insert id="mergeNeuUserRole">
		<selectKey keyProperty="count" resultType="java.lang.Integer"
			order="BEFORE">
			select count(*) from common.neuUserRole where neuUserId = #{neuUserId} and
			neuCmptId=#{neuCmptId} and roleId=#{roleId} and committeeNeuUserId=#{commitNeuUserId}
		</selectKey>
		<if test="count &gt; 0">
			update common.neuUserRole
			set neuUserId = #{neuUserId},roleId =
			#{roleId},neuCmptId=#{neuCmptId},deadline=#{deadline},deleted=0,committeeNeuUserId=#{commitNeuUserId}
			where neuUserId = #{neuUserId} and neuCmptId=#{neuCmptId} and
			roleId=#{roleId} and committeeNeuUserId=#{commitNeuUserId}
		</if>
		<if test="count==0">
			insert into common.neuUserRole(neuUserId, roleId, neuCmptId, deadline,
			deleted,committeeNeuUserId)
			values(#{neuUserId}, #{roleId},#{neuCmptId},#{deadline},0,#{commitNeuUserId})
		</if>
	</insert>
	
	<insert id="mergeNeuUserRoleInitFunctional">
		<selectKey keyProperty="count" resultType="java.lang.Integer" order="BEFORE">
			select count(1) from neuUserRole 
			where deleted=0 and neuUserId = #{neuUserId} and committeeNeuUserId is null and deadline='2099-12-31 23:59:59'
		</selectKey>
		<if test="count &gt; 0">
			update neuUserRole
			set roleId =#{roleId},neuCmptId=#{neuCmptId}
			where deleted=0 and neuUserId = #{neuUserId} and committeeNeuUserId is null and deadline='2099-12-31 23:59:59'
			limit 1
		</if>
		<if test="count==0">
			insert into neuUserRole(neuUserId, roleId, neuCmptId, deadline,deleted,committeeNeuUserId)
			values(#{neuUserId}, #{roleId}, #{neuCmptId},'2099-12-31 23:59:59',0,null)
		</if>
	</insert>
	
	<update id="deleteNeuRole">
	  	 update common.neuUserRole a set deleted=1 
	  	 where neuCmptId=#{neuCmptId}
			
	</update>
	<update id="deleteNeuUserRoleByIds">
		update common.neuUserRole a set deleted=1
		<where>
			<foreach collection="ids" item="id" index="index" open="("
				close=")" separator="or">
				a.id=#{id}
			</foreach>
		</where>
	</update>

	<!-- 根据整合赛事的截止时间 -->
	<select id="getDeadLineNeuCmptId" resultType="java.util.Date">
		select deadline from common.neuUserRole nr
		where nr.neuCmptId=#{neuCmptId} and nr.deleted=0 limit 1
	</select>
	<update id="deleteNeuUserRoleByUserIdAndCmptId">
		update common.neuUserRole set deleted=1
		where neuCmptId=#{neuCmptId}
		and neuUserId=#{neuUserId}
		<!-- <where> 1=1 <if test='neuCmptId!=null and neuCmptId!=0'> and neuCmptId=#{neuCmptId} 
			</if> <if test='neuUserId!=null and neuUserId!=0'> and neuUserId=#{neuUserId} 
			</if> </where> -->
	</update>

	<update id="deleteNeuUserRole">
		update common.neuUserRole set deleted=1
		where id=#{id}
	</update>
	<!--根据neuUserId、neuCmptId、role组合查找NeuUserRoleBean -->
	<select id="getUserRoleList" resultMap="neuUserRole">
		select
		<include refid="Base_Column_List" />
		,
		(select locName from raceEnroll.registerInfo where userId=(select gUserId
		from neuUser where neuUserId=nr.neuUserId)) locName
		from neuUserRole nr
		<where>
			deleted=0
			<if test='neuCmptId!=null and neuCmptId!=0'>
				and neuCmptId=#{neuCmptId}
			</if>
			<if test='neuUserId!=null and neuUserId!=0'>
				and neuUserId=#{neuUserId}
			</if>
			<if test='roleId!=null and roleId!=0'>
				and roleId=#{roleId}
			</if>
		</where>
	</select>
	
		<!--根据commitNeuUserId、neuUserId、neuCmptId、role组合查找NeuUserRoleBean -->
	<select id="getUserRoleLists" resultMap="neuUserRole">
		select
		<include refid="Base_Column_List" />
		,
		(select locName from raceEnroll.registerInfo where userId=(select gUserId
		from neuUser where neuUserId=nr.neuUserId)) locName
		from neuUserRole nr
		<where>
			deleted=0 and committeeNeuUserId=#{commitNeuUserId}
			<if test='neuCmptId!=null and neuCmptId!=0'>
				and neuCmptId=#{neuCmptId}
			</if>
			<if test='neuUserId!=null and neuUserId!=0'>
				and neuUserId=#{neuUserId}
			</if>
			<if test='roleId!=null and roleId!=0'>
				and roleId=#{roleId}
			</if>
		</where>
	</select>

	<select id="getFunctionalPermission" resultType="java.lang.String">
		select ifnull(group_concat(distinct permission), '')
		from permissionRole
		where roleId in (SELECT roleId FROM neuUserRole where
		neuUserId=#{neuUserId} and deleted=0 and (deadline &gt; now() or
		deadline is null) and neuCmptId &lt; 0)
	</select>
	<select id="getFunctionalRole" resultType="java.lang.String">
		SELECT ifnull(group_concat(distinct roleId), '') FROM neuUserRole where
		neuUserId=#{neuUserId} and deleted=0 and (deadline &gt; now() or
		deadline is null) and neuCmptId &lt; 0
	</select>

	<select id="getPermission" resultType="java.lang.String">
	select ifnull(group_concat(distinct permission), '')
	from permissionRole 
	where roleId in
	(
		select roleId from neuUserRole nur
		where neuUserId= #{neuUserId} and deleted=0 and NOW() &lt; deadline and #{neuCmptId} in 
		(
			select neuCmptId from neuCmpt where deleted=0 and nur.neuCmptId=-2 -- 所有赛事
			union
			select neuCmptId from neuCmpt where committeeNeuUserId= -- 组委会下的赛事
			ifnull((select parentNeuUserId from neuUserHierarchy where neuUserId=#{neuUserId} and deleted=0 order by id desc limit 1), #{neuUserId}) and nur.neuCmptId=-3  -- ifnull找出组委会的neuUserId
			union
			select neuCmptId from neuCmpt where deleted=0 and neuUserId=#{neuUserId} and nur.neuCmptId=-4 -- 个人下的赛事
			union 
			select if(nur.neuCmptId>0, nur.neuCmptId, null) -- 数据权限赛事
		)
	)
	</select>


</mapper>






























